package main

import (
	"io/ioutil"
	"net/http"

	"github.com/CS-5/disgomux"
	"github.com/bwmarrin/discordgo"
)

type cInspire struct {
	Command  string
	HelpText string
}

func (i cInspire) Init(m *disgomux.Mux) {
	// Nothing to init
}

func (i cInspire) Handle(ctx *disgomux.Context) {
	resp, err := http.Get("http://inspirobot.me/api?generate=true")
	if err != nil {
		cmdIssue(ctx, err, "There was a contacting the InspiroBot API")
		return
	}
	defer resp.Body.Close()

	if resp.StatusCode == http.StatusOK {
		body, err := ioutil.ReadAll(resp.Body)
		if err != nil {
			cmdIssue(ctx, err, "Unable to parse InspiroBot response")
			return
		}

		ctx.Session.ChannelMessageSendEmbed(ctx.Message.ChannelID,
			&discordgo.MessageEmbed{
				Description: "~~[Favorite]() | [Delete]()~~ _Work in progress_",
				Color:       0x6dd3ff,
				Image: &discordgo.MessageEmbedImage{
					URL: string(body),
				},
			},
		)
		return
	}
	ctx.ChannelSend("Sorry, I couldn't chat with InspiroBot. Maybe try again later?")
}

func (i cInspire) HandleHelp(ctx *disgomux.Context) bool {
	ctx.ChannelSend("`!inspire` for a free inspirational message generated by inspirobot.me! (Use at your own risk)")
	return true
}

func (i cInspire) Settings() *disgomux.CommandSettings {
	return &disgomux.CommandSettings{
		Command:  i.Command,
		HelpText: i.HelpText,
	}
}

func (i cInspire) Permissions() *disgomux.CommandPermissions {
	return &disgomux.CommandPermissions{}
}
